package Inventorymanagementsystem;
import java.util.*;
interface Restockable {
    void restock(int quantity);
}
class OutOfStockException extends Exception {
    public OutOfStockException(String message) {
        super(message);
    }
}
class InvalidProductException extends Exception {
    public InvalidProductException(String message) {
        super(message);
    }
}
abstract class Product implements Restockable {
    String name;
    int stock;
    String expiryDate;

    public Product(String name, int stock, String expiryDate) {
        this.name = name;
        this.stock = stock;
        this.expiryDate = expiryDate;
    }

    abstract void displayInfo();

    public boolean isLowStock() {
        return stock < 5;
    }

    public void restock(int quantity) {
        stock += quantity;
        System.out.println(name + " ‡§ï‡•ã ‡§´‡§ø‡§∞ ‡§∏‡•á ‡§∏‡•ç‡§ü‡•â‡§ï ‡§ï‡§ø‡§Ø‡§æ ‡§ó‡§Ø‡§æ: ‡§Ö‡§¨ ‡§∏‡•ç‡§ü‡•â‡§ï = " + stock);
    }

    public void reduceStock(int quantity) throws OutOfStockException {
        if (stock < quantity) throw new OutOfStockException(name + " ‡§ï‡§æ ‡§∏‡•ç‡§ü‡•â‡§ï ‡§™‡•Ç‡§∞‡§æ ‡§®‡§π‡•Ä‡§Ç ‡§π‡•à!");
        stock -= quantity;
    }
}
class Electronics extends Product {
    public Electronics(String name, int stock, String expiryDate) {
        super(name, stock, expiryDate);
    }
    void displayInfo() {
        System.out.println("Electronics: " + name + ", Stock: " + stock + ", Expiry: " + expiryDate);
    }
}

class Clothing extends Product {
    public Clothing(String name, int stock, String expiryDate) {
        super(name, stock, expiryDate);
    }
    void displayInfo() {
        System.out.println("Clothing: " + name + ", Stock: " + stock + ", Expiry: " + expiryDate);
    }
}

class Grocery extends Product {
    public Grocery(String name, int stock, String expiryDate) {
        super(name, stock, expiryDate);
    }
    void displayInfo() {
        System.out.println("Grocery: " + name + ", Stock: " + stock + ", Expiry: " + expiryDate);
    }
}
class Inventory {
    List<Product> products = new ArrayList<>();

    public void addProduct(Product p) {
        products.add(p);
        System.out.println(p.name + " ‡§á‡§®‡•ç‡§µ‡•á‡§Ç‡§ü‡•ç‡§∞‡•Ä ‡§Æ‡•á‡§Ç ‡§ú‡•ã‡§°‡§º‡§æ ‡§ó‡§Ø‡§æ‡•§");
    }

    public void removeProduct(String name) throws InvalidProductException {
        for (Product p : products) {
            if (p.name.equalsIgnoreCase(name)) {
                products.remove(p);
                System.out.println(name + " ‡§ï‡•ã ‡§π‡§ü‡§æ‡§Ø‡§æ ‡§ó‡§Ø‡§æ‡•§");
                return;
            }
        }
        throw new InvalidProductException("‚ùå " + name + " ‡§á‡§®‡•ç‡§µ‡•á‡§Ç‡§ü‡•ç‡§∞‡•Ä ‡§Æ‡•á‡§Ç ‡§®‡§π‡•Ä‡§Ç ‡§π‡•à‡•§");
    }

    public void checkLowStock() {
        for (Product p : products) {
            if (p.isLowStock()) {
                System.out.println("‚ö† ‡§≤‡•ã ‡§∏‡•ç‡§ü‡•â‡§ï ‡§Ö‡§≤‡§∞‡•ç‡§ü: " + p.name);
            }
        }
    }
    public void showInventory() {
        for (Product p : products) {
            p.displayInfo();
        }
    }

    public Product getProductByName(String name) throws InvalidProductException {
        for (Product p : products) {
            if (p.name.equalsIgnoreCase(name)) return p;
        }
        throw new InvalidProductException("‚ùå " + name + " ‡§®‡§π‡•Ä‡§Ç ‡§Æ‡§ø‡§≤‡§æ‡•§");
    }
}
class Supplier {
    public void orderStock(Product p, int quantity) {
        p.restock(quantity);
        System.out.println("üì¶ ‡§∏‡§™‡•ç‡§≤‡§æ‡§Ø‡§∞ ‡§®‡•á " + quantity + " items ‡§≠‡•á‡§ú‡•á for " + p.name);
    }
}
class Main {
    public static void main(String[] args) {
        Inventory inventory = new Inventory();
        Supplier supplier = new Supplier();

        // ‡§™‡•ç‡§∞‡•ã‡§°‡§ï‡•ç‡§ü‡•ç‡§∏ ‡§ú‡•ã‡§°‡§º‡§®‡§æ
        Product laptop = new Electronics("Laptop", 3, "2030-12-31");
        Product jeans = new Clothing("Jeans", 7, "2028-06-15");
        Product milk = new Grocery("Milk", 2, "2025-10-10");

        inventory.addProduct(laptop);
        inventory.addProduct(jeans);
        inventory.addProduct(milk);

        // ‡§á‡§®‡•ç‡§µ‡•á‡§Ç‡§ü‡•ç‡§∞‡•Ä ‡§¶‡§ø‡§ñ‡§æ‡§®‡§æ
        System.out.println("\nüìã ‡§á‡§®‡•ç‡§µ‡•á‡§Ç‡§ü‡•ç‡§∞‡•Ä ‡§≤‡§ø‡§∏‡•ç‡§ü:");
        inventory.showInventory();

        // ‡§≤‡•ã ‡§∏‡•ç‡§ü‡•â‡§ï ‡§ö‡•á‡§ï ‡§ï‡§∞‡§®‡§æ
        System.out.println("\nüîç ‡§≤‡•ã ‡§∏‡•ç‡§ü‡•â‡§ï ‡§ö‡•á‡§ï:");
        inventory.checkLowStock();

        // ‡§∏‡§™‡•ç‡§≤‡§æ‡§Ø‡§∞ ‡§∏‡•á ‡§∏‡•ç‡§ü‡•â‡§ï ‡§Æ‡§Ç‡§ó‡§µ‡§æ‡§®‡§æ
        supplier.orderStock(milk, 10);

        // ‡§ï‡§ø‡§∏‡•Ä ‡§™‡•ç‡§∞‡•ã‡§°‡§ï‡•ç‡§ü ‡§ï‡•ã ‡§π‡§ü‡§æ‡§®‡§æ
        try {
            inventory.removeProduct("Jeans");
        } catch (InvalidProductException e) {
            System.out.println(e.getMessage());
        }

        // ‡§™‡•ç‡§∞‡•ã‡§°‡§ï‡•ç‡§ü ‡§¨‡•á‡§ö‡§®‡•á ‡§ï‡•Ä ‡§ï‡•ã‡§∂‡§ø‡§∂
        try {
            Product p = inventory.getProductByName("Laptop");
            p.reduceStock(4); // ‡§ú‡§º‡•ç‡§Ø‡§æ‡§¶‡§æ ‡§Æ‡§æ‡§Ç‡§ó‡§®‡•á ‡§™‡§∞ exception ‡§Ü‡§è‡§ó‡§æ
        } catch (Exception e) {
            System.out.println("‚ùå Error: " + e.getMessage());
        }

        // ‡§´‡§æ‡§á‡§®‡§≤ ‡§á‡§®‡•ç‡§µ‡•á‡§Ç‡§ü‡•ç‡§∞‡•Ä
        System.out.println("\nüìã ‡§´‡§æ‡§á‡§®‡§≤ ‡§á‡§®‡•ç‡§µ‡•á‡§Ç‡§ü‡•ç‡§∞‡•Ä:");
        inventory.showInventory();
    }
}

